{"mappings":"ACUA,MAAM,SAAS,CAAG,SAAW,CAAO,EAEnC,MAAM,MAAM,CAAC,IAAI,CAAE,IAAI,CAAE,GAEzB,IAAI,CAAC,QAAQ,CAAG,CAAA,CAEjB,EAGA,MAAM,SAAS,CAAC,SAAS,CAAG,OAAO,MAAM,CAAE,OAAO,MAAM,CAAE,MAAM,MAAM,CAAC,SAAS,EAAI,CAEnF,YAAa,MAAM,SAAS,CAE5B,KAAM,SAAW,CAAG,CAAE,CAAM,CAAE,CAAU,CAAE,CAAO,EAEhD,IAAI,EAAQ,IAAI,CAEZ,EAAS,IAAI,MAAM,UAAU,CAAE,IAAI,CAAC,OAAO,EAC/C,EAAO,OAAO,CAAE,IAAI,CAAC,IAAI,EACzB,EAAO,eAAe,CAAE,eACxB,EAAO,IAAI,CAAE,EAAK,SAAW,CAAM,EAElC,EAAQ,EAAM,KAAK,CAAE,GAEtB,EAAG,EAAY,EAEhB,EAEA,MAAO,SAAW,CAAW,QAsJ5B,AAAK,AAAoB,aAApB,OAAO,UAEX,QAAQ,IAAI,CAAE,sGACP,MAID,AA3JP,SAAkB,CAAI,CAAE,CAAQ,EAU/B,IAAM,IARF,EAAQ,KAAK,KAAK,CAElB,EAAS,CAAC,EACV,EAAU,IAAa,CAAA,AAA8B,GAA5B,CAAA,EAAK,UAAU,EAAI,IAAA,CAAS,EAErD,EAAgB,EAAK,QAAQ,CAAC,IAAI,CAAC,aAAa,CAChD,EAAW,OAAO,IAAI,CAAE,GAElB,EAAI,EAAG,EAAI,EAAS,MAAM,CAAE,IAAO,CAE5C,IAAI,EAAU,CAAQ,CAAE,EAAG,CACvB,EAAQ,EAAK,MAAM,CAAC,MAAM,CAAE,CAAa,CAAE,EAAS,CAAE,CAE1D,GAAK,AAAY,KAAA,IAAZ,EAAwB,CAE5B,IAAI,EAAQ,CACX,GAAI,EAAO,EAAM,YAAY,CAAG,GAChC,MAAO,EAAO,EAAM,IAAI,CAAG,GAC3B,MAAO,EAAO,EAAM,IAAI,CAAG,GAC3B,EAAG,EACJ,EAEK,GAEJ,CAAA,EAAM,IAAI,CAAC,QAAQ,CAAG,AA2D1B,SAA0B,CAAQ,EAEjC,IACI,EADA,EAAQ,EAAE,CAGd,EAAS,OAAO,CAAE,SAAW,CAAC,EAExB,AAAyB,MAAzB,EAAE,IAAI,CAAC,WAAW,IAEtB,EAAO,CAAE,EAAG,CACZ,EAAM,IAAI,CAAE,IAEwB,MAAzB,EAAE,IAAI,CAAC,WAAW,IAE7B,EAAK,IAAI,CAAE,EAIb,GAEA,IAAI,EAAW,EAAE,CAuCjB,OArCA,EAAM,OAAO,CAAE,SAAW,CAAC,EAE1B,IAAI,EAAS,CACZ,KAAM,IACN,EAAG,CAAC,CAAE,EAAE,MAAM,CAAG,EAAG,CAAC,CAAC,CACtB,EAAG,CAAC,CAAE,EAAE,MAAM,CAAG,EAAG,CAAC,CAAC,AACvB,EAEA,EAAS,IAAI,CAAE,GAEf,IAAM,IAAI,EAAI,EAAE,MAAM,CAAG,EAAG,EAAI,EAAG,IAAO,CAEzC,IAAI,EAAU,CAAC,CAAE,EAAG,CAChB,EAAS,CAAE,KAAM,EAAQ,IAAI,AAAC,CAE7B,AAAe,MAAA,IAAf,EAAQ,EAAE,EAAkB,AAAe,KAAA,IAAf,EAAQ,EAAE,EAE1C,EAAO,EAAE,CAAG,EAAQ,EAAE,CACtB,EAAO,EAAE,CAAG,EAAQ,EAAE,CACtB,EAAO,EAAE,CAAG,EAAQ,EAAE,CACtB,EAAO,EAAE,CAAG,EAAQ,EAAE,EAEI,KAAA,IAAf,EAAQ,EAAE,EAAkB,AAAe,KAAA,IAAf,EAAQ,EAAE,GAEjD,EAAO,EAAE,CAAG,EAAQ,EAAE,CACtB,EAAO,EAAE,CAAG,EAAQ,EAAE,EAIvB,EAAO,CAAC,CAAG,CAAC,CAAE,EAAI,EAAG,CAAC,CAAC,CACvB,EAAO,CAAC,CAAG,CAAC,CAAE,EAAI,EAAG,CAAC,CAAC,CACvB,EAAS,IAAI,CAAE,EAEhB,CAED,GAEO,CAER,EAxH2C,EAAM,IAAI,CAAC,QAAQ,CAAA,EAI3D,EAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAE,SAAW,CAAO,EAEV,MAA/B,EAAQ,IAAI,CAAC,WAAW,IAE5B,CAAA,EAAQ,IAAI,CAAG,GAFhB,EAMA,EAAM,CAAC,EAAI,EAAQ,IAAI,CAAC,WAAW,GAAK,IAErB,KAAA,IAAd,EAAQ,CAAC,EAAkB,AAAc,KAAA,IAAd,EAAQ,CAAC,EAExC,CAAA,EAAM,CAAC,EAAI,EAAO,EAAQ,CAAC,CAAG,GAAU,IAAM,EAAO,EAAQ,CAAC,CAAG,GAAU,GAF5E,EAMoB,KAAA,IAAf,EAAQ,EAAE,EAAkB,AAAe,KAAA,IAAf,EAAQ,EAAE,EAE1C,CAAA,EAAM,CAAC,EAAI,EAAO,EAAQ,EAAE,CAAG,GAAU,IAAM,EAAO,EAAQ,EAAE,CAAG,GAAU,GAF9E,EAMoB,KAAA,IAAf,EAAQ,EAAE,EAAkB,AAAe,KAAA,IAAf,EAAQ,EAAE,EAE1C,CAAA,EAAM,CAAC,EAAI,EAAO,EAAQ,EAAE,CAAG,GAAU,IAAM,EAAO,EAAQ,EAAE,CAAG,GAAU,GAF9E,CAMD,GAEA,CAAM,CAAE,OAAO,aAAa,CAAE,EAAM,OAAO,EAAI,CAAG,CAEnD,CAED,CAEA,MAAO,CACN,OAAQ,EACR,WAAY,EAAK,cAAc,CAAE,YACjC,SAAU,EAAO,EAAK,QAAQ,CAAG,GACjC,UAAW,EAAO,EAAK,SAAS,CAAG,GACnC,kBAAmB,EAAK,MAAM,CAAC,IAAI,CAAC,iBAAiB,CACrD,mBAAoB,EAAK,MAAM,CAAC,IAAI,CAAC,kBAAkB,CACvD,YAAa,CACZ,KAAM,EAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAC3B,KAAM,EAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAC3B,KAAM,EAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAC3B,KAAM,EAAK,MAAM,CAAC,IAAI,CAAC,IAAI,AAC5B,EACA,WAAY,IACZ,0BAA2B,EAAK,MAAM,CAAC,IAAI,AAC5C,CAED,EAwEgB,SAAS,KAAK,CAAE,GAAe,IAAI,CAAC,QAAQ,CAE7D,CAED","sources":["<anon>","resource/TTFLoader.js"],"sourcesContent":["/**\n * @author gero3 / https://github.com/gero3\n * @author tentone / https://github.com/tentone\n * @author troy351 / https://github.com/troy351\n *\n * Requires opentype.js to be included in the project.\n * Loads TTF files and converts them into typeface JSON that can be used directly\n * to create THREE.Font objects.\n */ THREE.TTFLoader = function(manager) {\n    THREE.Loader.call(this, manager);\n    this.reversed = false;\n};\nTHREE.TTFLoader.prototype = Object.assign(Object.create(THREE.Loader.prototype), {\n    constructor: THREE.TTFLoader,\n    load: function(url, onLoad, onProgress, onError) {\n        var scope = this;\n        var loader = new THREE.FileLoader(this.manager);\n        loader.setPath(this.path);\n        loader.setResponseType('arraybuffer');\n        loader.load(url, function(buffer) {\n            onLoad(scope.parse(buffer));\n        }, onProgress, onError);\n    },\n    parse: function(arraybuffer) {\n        function convert(font, reversed) {\n            var round = Math.round;\n            var glyphs = {};\n            var scale = 100000 / ((font.unitsPerEm || 2048) * 72);\n            var glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n            var unicodes = Object.keys(glyphIndexMap);\n            for(var i = 0; i < unicodes.length; i++){\n                var unicode = unicodes[i];\n                var glyph = font.glyphs.glyphs[glyphIndexMap[unicode]];\n                if (unicode !== undefined) {\n                    var token = {\n                        ha: round(glyph.advanceWidth * scale),\n                        x_min: round(glyph.xMin * scale),\n                        x_max: round(glyph.xMax * scale),\n                        o: ''\n                    };\n                    if (reversed) glyph.path.commands = reverseCommands(glyph.path.commands);\n                    glyph.path.commands.forEach(function(command) {\n                        if (command.type.toLowerCase() === 'c') command.type = 'b';\n                        token.o += command.type.toLowerCase() + ' ';\n                        if (command.x !== undefined && command.y !== undefined) token.o += round(command.x * scale) + ' ' + round(command.y * scale) + ' ';\n                        if (command.x1 !== undefined && command.y1 !== undefined) token.o += round(command.x1 * scale) + ' ' + round(command.y1 * scale) + ' ';\n                        if (command.x2 !== undefined && command.y2 !== undefined) token.o += round(command.x2 * scale) + ' ' + round(command.y2 * scale) + ' ';\n                    });\n                    glyphs[String.fromCodePoint(glyph.unicode)] = token;\n                }\n            }\n            return {\n                glyphs: glyphs,\n                familyName: font.getEnglishName('fullName'),\n                ascender: round(font.ascender * scale),\n                descender: round(font.descender * scale),\n                underlinePosition: font.tables.post.underlinePosition,\n                underlineThickness: font.tables.post.underlineThickness,\n                boundingBox: {\n                    xMin: font.tables.head.xMin,\n                    xMax: font.tables.head.xMax,\n                    yMin: font.tables.head.yMin,\n                    yMax: font.tables.head.yMax\n                },\n                resolution: 1000,\n                original_font_information: font.tables.name\n            };\n        }\n        function reverseCommands(commands) {\n            var paths = [];\n            var path;\n            commands.forEach(function(c) {\n                if (c.type.toLowerCase() === 'm') {\n                    path = [\n                        c\n                    ];\n                    paths.push(path);\n                } else if (c.type.toLowerCase() !== 'z') path.push(c);\n            });\n            var reversed = [];\n            paths.forEach(function(p) {\n                var result = {\n                    type: 'm',\n                    x: p[p.length - 1].x,\n                    y: p[p.length - 1].y\n                };\n                reversed.push(result);\n                for(var i = p.length - 1; i > 0; i--){\n                    var command = p[i];\n                    var result = {\n                        type: command.type\n                    };\n                    if (command.x2 !== undefined && command.y2 !== undefined) {\n                        result.x1 = command.x2;\n                        result.y1 = command.y2;\n                        result.x2 = command.x1;\n                        result.y2 = command.y1;\n                    } else if (command.x1 !== undefined && command.y1 !== undefined) {\n                        result.x1 = command.x1;\n                        result.y1 = command.y1;\n                    }\n                    result.x = p[i - 1].x;\n                    result.y = p[i - 1].y;\n                    reversed.push(result);\n                }\n            });\n            return reversed;\n        }\n        if (typeof opentype === 'undefined') {\n            console.warn('THREE.TTFLoader: The loader requires opentype.js. Make sure it\\'s included before using the loader.');\n            return null;\n        }\n        return convert(opentype.parse(arraybuffer), this.reversed);\n    }\n});\n\n//# sourceMappingURL=index.7c8ea5cd.js.map\n","/**\n * @author gero3 / https://github.com/gero3\n * @author tentone / https://github.com/tentone\n * @author troy351 / https://github.com/troy351\n *\n * Requires opentype.js to be included in the project.\n * Loads TTF files and converts them into typeface JSON that can be used directly\n * to create THREE.Font objects.\n */\n\nTHREE.TTFLoader = function ( manager ) {\n\n\tTHREE.Loader.call( this, manager );\n\n\tthis.reversed = false;\n\n};\n\n\nTHREE.TTFLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\tconstructor: THREE.TTFLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tonLoad( scope.parse( buffer ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( arraybuffer ) {\n\n\t\tfunction convert( font, reversed ) {\n\n\t\t\tvar round = Math.round;\n\n\t\t\tvar glyphs = {};\n\t\t\tvar scale = ( 100000 ) / ( ( font.unitsPerEm || 2048 ) * 72 );\n\n\t\t\tvar glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n\t\t\tvar unicodes = Object.keys( glyphIndexMap );\n\n\t\t\tfor ( var i = 0; i < unicodes.length; i ++ ) {\n\n\t\t\t\tvar unicode = unicodes[ i ];\n\t\t\t\tvar glyph = font.glyphs.glyphs[ glyphIndexMap[ unicode ] ];\n\n\t\t\t\tif ( unicode !== undefined ) {\n\n\t\t\t\t\tvar token = {\n\t\t\t\t\t\tha: round( glyph.advanceWidth * scale ),\n\t\t\t\t\t\tx_min: round( glyph.xMin * scale ),\n\t\t\t\t\t\tx_max: round( glyph.xMax * scale ),\n\t\t\t\t\t\to: ''\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\tglyph.path.commands = reverseCommands( glyph.path.commands );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tglyph.path.commands.forEach( function ( command ) {\n\n\t\t\t\t\t\tif ( command.type.toLowerCase() === 'c' ) {\n\n\t\t\t\t\t\t\tcommand.type = 'b';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttoken.o += command.type.toLowerCase() + ' ';\n\n\t\t\t\t\t\tif ( command.x !== undefined && command.y !== undefined ) {\n\n\t\t\t\t\t\t\ttoken.o += round( command.x * scale ) + ' ' + round( command.y * scale ) + ' ';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( command.x1 !== undefined && command.y1 !== undefined ) {\n\n\t\t\t\t\t\t\ttoken.o += round( command.x1 * scale ) + ' ' + round( command.y1 * scale ) + ' ';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( command.x2 !== undefined && command.y2 !== undefined ) {\n\n\t\t\t\t\t\t\ttoken.o += round( command.x2 * scale ) + ' ' + round( command.y2 * scale ) + ' ';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tglyphs[ String.fromCodePoint( glyph.unicode ) ] = token;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tglyphs: glyphs,\n\t\t\t\tfamilyName: font.getEnglishName( 'fullName' ),\n\t\t\t\tascender: round( font.ascender * scale ),\n\t\t\t\tdescender: round( font.descender * scale ),\n\t\t\t\tunderlinePosition: font.tables.post.underlinePosition,\n\t\t\t\tunderlineThickness: font.tables.post.underlineThickness,\n\t\t\t\tboundingBox: {\n\t\t\t\t\txMin: font.tables.head.xMin,\n\t\t\t\t\txMax: font.tables.head.xMax,\n\t\t\t\t\tyMin: font.tables.head.yMin,\n\t\t\t\t\tyMax: font.tables.head.yMax\n\t\t\t\t},\n\t\t\t\tresolution: 1000,\n\t\t\t\toriginal_font_information: font.tables.name\n\t\t\t};\n\n\t\t}\n\n\t\tfunction reverseCommands( commands ) {\n\n\t\t\tvar paths = [];\n\t\t\tvar path;\n\n\t\t\tcommands.forEach( function ( c ) {\n\n\t\t\t\tif ( c.type.toLowerCase() === 'm' ) {\n\n\t\t\t\t\tpath = [ c ];\n\t\t\t\t\tpaths.push( path );\n\n\t\t\t\t} else if ( c.type.toLowerCase() !== 'z' ) {\n\n\t\t\t\t\tpath.push( c );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tvar reversed = [];\n\n\t\t\tpaths.forEach( function ( p ) {\n\n\t\t\t\tvar result = {\n\t\t\t\t\ttype: 'm',\n\t\t\t\t\tx: p[ p.length - 1 ].x,\n\t\t\t\t\ty: p[ p.length - 1 ].y\n\t\t\t\t};\n\n\t\t\t\treversed.push( result );\n\n\t\t\t\tfor ( var i = p.length - 1; i > 0; i -- ) {\n\n\t\t\t\t\tvar command = p[ i ];\n\t\t\t\t\tvar result = { type: command.type };\n\n\t\t\t\t\tif ( command.x2 !== undefined && command.y2 !== undefined ) {\n\n\t\t\t\t\t\tresult.x1 = command.x2;\n\t\t\t\t\t\tresult.y1 = command.y2;\n\t\t\t\t\t\tresult.x2 = command.x1;\n\t\t\t\t\t\tresult.y2 = command.y1;\n\n\t\t\t\t\t} else if ( command.x1 !== undefined && command.y1 !== undefined ) {\n\n\t\t\t\t\t\tresult.x1 = command.x1;\n\t\t\t\t\t\tresult.y1 = command.y1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.x = p[ i - 1 ].x;\n\t\t\t\t\tresult.y = p[ i - 1 ].y;\n\t\t\t\t\treversed.push( result );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn reversed;\n\n\t\t}\n\n\t\tif ( typeof opentype === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.TTFLoader: The loader requires opentype.js. Make sure it\\'s included before using the loader.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn convert( opentype.parse( arraybuffer ), this.reversed );\n\n\t}\n\n} );\n"],"names":["THREE","TTFLoader","manager","Loader","call","reversed","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","setResponseType","buffer","parse","arraybuffer","opentype","console","warn","convert","font","round","Math","glyphs","scale","unitsPerEm","glyphIndexMap","encoding","cmap","unicodes","keys","i","length","unicode","glyph","undefined","token","ha","advanceWidth","x_min","xMin","x_max","xMax","o","commands","reverseCommands","paths","forEach","c","type","toLowerCase","push","p","result","x","y","command","x2","y2","x1","y1","String","fromCodePoint","familyName","getEnglishName","ascender","descender","underlinePosition","tables","post","underlineThickness","boundingBox","head","yMin","yMax","resolution","original_font_information","name"],"version":3,"file":"index.7c8ea5cd.js.map"}